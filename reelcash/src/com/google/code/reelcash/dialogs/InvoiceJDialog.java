/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InvoiceJDialog.java
 *
 * Created on Jan 16, 2010, 2:11:42 PM
 */
package com.google.code.reelcash.dialogs;

import com.google.code.reelcash.actions.CloseAction;
import com.google.code.reelcash.data.DbManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cusi
 */
public class InvoiceJDialog extends javax.swing.JDialog {

    /** Creates new form InvoiceJDialog */
    public InvoiceJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        headerPanel = new javax.swing.JPanel();
        invoiceNoLabel = new javax.swing.JLabel();
        invoiceNoSpinner = new javax.swing.JSpinner();
        invoiceSeriesLabel = new javax.swing.JLabel();
        invoiceSeriesField = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        dateSpinner = new javax.swing.JSpinner();
        dueDateLabel = new javax.swing.JLabel();
        dueDateSpinner = new javax.swing.JSpinner();
        customerNameLabel = new javax.swing.JLabel();
        customerNameField = new javax.swing.JTextField();
        customerAddressLabel = new javax.swing.JLabel();
        customerAddressField = new javax.swing.JTextField();
        customerRegionLabel = new javax.swing.JLabel();
        customerRegionField = new javax.swing.JTextField();
        customerCountryLabel = new javax.swing.JLabel();
        customerCountryField = new javax.swing.JTextField();
        customerIdCodeLabel = new javax.swing.JLabel();
        customerIdCodeField = new javax.swing.JTextField();
        customerRegNoLabel = new javax.swing.JLabel();
        customerRegNoField = new javax.swing.JTextField();
        customerBankAccountLabel = new javax.swing.JLabel();
        customerBankAccountField = new javax.swing.JTextField();
        customerBankLabel = new javax.swing.JLabel();
        customerBankField = new javax.swing.JTextField();
        detailsPanel = new javax.swing.JPanel();
        toolBar = new javax.swing.JToolBar();
        addDetailButton = new javax.swing.JButton();
        deleteDetailButton = new javax.swing.JButton();
        tableScrollPane = new javax.swing.JScrollPane();
        detailsTable = new javax.swing.JTable();
        commandPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Invoice");
        setFocusCycleRoot(false);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(400, 300));
        setName("invoicedialog"); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        headerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Invoice header"));
        headerPanel.setLayout(new java.awt.GridBagLayout());

        invoiceNoLabel.setText("Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 15, 0, 0);
        headerPanel.add(invoiceNoLabel, gridBagConstraints);

        invoiceNoSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        invoiceNoSpinner.setMinimumSize(new java.awt.Dimension(65, 20));
        invoiceNoSpinner.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(25, 5, 2, 15);
        headerPanel.add(invoiceNoSpinner, gridBagConstraints);

        invoiceSeriesLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        invoiceSeriesLabel.setText("Series");
        invoiceSeriesLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        headerPanel.add(invoiceSeriesLabel, gridBagConstraints);

        invoiceSeriesField.setMinimumSize(new java.awt.Dimension(120, 19));
        invoiceSeriesField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(25, 5, 2, 15);
        headerPanel.add(invoiceSeriesField, gridBagConstraints);

        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateLabel.setText("Date");
        dateLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        headerPanel.add(dateLabel, gridBagConstraints);

        dateSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.DAY_OF_WEEK));
        dateSpinner.setEditor(new javax.swing.JSpinner.DateEditor(dateSpinner, "E, dd.MM.yyyy"));
        dateSpinner.setMinimumSize(new java.awt.Dimension(120, 20));
        dateSpinner.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(25, 5, 2, 15);
        headerPanel.add(dateSpinner, gridBagConstraints);

        dueDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dueDateLabel.setText("Due date");
        dueDateLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        headerPanel.add(dueDateLabel, gridBagConstraints);

        dueDateSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.DAY_OF_WEEK));
        dueDateSpinner.setEditor(new javax.swing.JSpinner.DateEditor(dueDateSpinner, "E, dd.MM.yyyy"));
        dueDateSpinner.setMinimumSize(new java.awt.Dimension(120, 20));
        dueDateSpinner.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(25, 5, 2, 15);
        headerPanel.add(dueDateSpinner, gridBagConstraints);

        customerNameLabel.setText("Customer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        headerPanel.add(customerNameLabel, gridBagConstraints);

        customerNameField.setMinimumSize(new java.awt.Dimension(120, 19));
        customerNameField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 10);
        headerPanel.add(customerNameField, gridBagConstraints);

        customerAddressLabel.setText("Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        headerPanel.add(customerAddressLabel, gridBagConstraints);

        customerAddressField.setMinimumSize(new java.awt.Dimension(120, 19));
        customerAddressField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 10);
        headerPanel.add(customerAddressField, gridBagConstraints);

        customerRegionLabel.setText("Region");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        headerPanel.add(customerRegionLabel, gridBagConstraints);

        customerRegionField.setMinimumSize(new java.awt.Dimension(120, 19));
        customerRegionField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 10);
        headerPanel.add(customerRegionField, gridBagConstraints);

        customerCountryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        customerCountryLabel.setText("Country");
        customerCountryLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        headerPanel.add(customerCountryLabel, gridBagConstraints);

        customerCountryField.setMinimumSize(new java.awt.Dimension(120, 19));
        customerCountryField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 10);
        headerPanel.add(customerCountryField, gridBagConstraints);

        customerIdCodeLabel.setText("CIF/CNP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        headerPanel.add(customerIdCodeLabel, gridBagConstraints);

        customerIdCodeField.setMinimumSize(new java.awt.Dimension(120, 19));
        customerIdCodeField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 10);
        headerPanel.add(customerIdCodeField, gridBagConstraints);

        customerRegNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        customerRegNoLabel.setText("ORC");
        customerRegNoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        headerPanel.add(customerRegNoLabel, gridBagConstraints);

        customerRegNoField.setMinimumSize(new java.awt.Dimension(120, 19));
        customerRegNoField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 10);
        headerPanel.add(customerRegNoField, gridBagConstraints);

        customerBankAccountLabel.setText("Bank account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        headerPanel.add(customerBankAccountLabel, gridBagConstraints);

        customerBankAccountField.setMinimumSize(new java.awt.Dimension(120, 19));
        customerBankAccountField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 10);
        headerPanel.add(customerBankAccountField, gridBagConstraints);

        customerBankLabel.setText("Bank");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 25, 0);
        headerPanel.add(customerBankLabel, gridBagConstraints);

        customerBankField.setMinimumSize(new java.awt.Dimension(120, 19));
        customerBankField.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 25, 10);
        headerPanel.add(customerBankField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(25, 10, 0, 10);
        getContentPane().add(headerPanel, gridBagConstraints);

        detailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Details"));
        detailsPanel.setMaximumSize(new java.awt.Dimension(1000, 270));
        detailsPanel.setLayout(new java.awt.BorderLayout());

        toolBar.setOrientation(1);
        toolBar.setRollover(true);

        addDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/google/code/reelcash/images/toolbar/add_small.png"))); // NOI18N
        addDetailButton.setFocusable(false);
        addDetailButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addDetailButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddInvoiceDetailRequested(evt);
            }
        });
        toolBar.add(addDetailButton);

        deleteDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/google/code/reelcash/images/toolbar/delete_small.png"))); // NOI18N
        deleteDetailButton.setFocusable(false);
        deleteDetailButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteDetailButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onDeleteInvoiceDetailRequested(evt);
            }
        });
        toolBar.add(deleteDetailButton);

        detailsPanel.add(toolBar, java.awt.BorderLayout.WEST);

        tableScrollPane.setMaximumSize(new java.awt.Dimension(1000, 250));
        tableScrollPane.setMinimumSize(new java.awt.Dimension(250, 100));

        detailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {new Integer(1), null, "buc", new Integer(1), null}
            },
            new String [] {
                "Nr. crt", "Denumire", "U.M.", "Cantitate", "Pret Unitar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableScrollPane.setViewportView(detailsTable);

        detailsPanel.add(tableScrollPane, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.33;
        gridBagConstraints.insets = new java.awt.Insets(25, 10, 25, 10);
        getContentPane().add(detailsPanel, gridBagConstraints);

        commandPanel.setLayout(new java.awt.GridBagLayout());

        saveButton.setMnemonic('s');
        saveButton.setText("Save");
        saveButton.setActionCommand("save");
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setMaximumSize(new java.awt.Dimension(120, 25));
        saveButton.setMinimumSize(new java.awt.Dimension(85, 25));
        saveButton.setPreferredSize(new java.awt.Dimension(85, 25));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSaveInvoiceRequested(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 10, 25, 10);
        commandPanel.add(saveButton, gridBagConstraints);

        closeButton.setAction(new CloseAction(this));
        closeButton.setText("Close");
        closeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closeButton.setMaximumSize(new java.awt.Dimension(120, 25));
        closeButton.setMinimumSize(new java.awt.Dimension(85, 25));
        closeButton.setPreferredSize(new java.awt.Dimension(85, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(25, 10, 25, 10);
        commandPanel.add(closeButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 15, 10);
        getContentPane().add(commandPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onSaveInvoiceRequested(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSaveInvoiceRequested
        try {
            DbManager mgr = new DbManager();
            java.util.Date date = (java.util.Date) dateSpinner.getValue();
            java.util.Date due = (java.util.Date) dueDateSpinner.getValue();
            java.sql.Date sdate = new java.sql.Date(date.getTime());
            java.sql.Date sdue = new java.sql.Date(sdate.getTime());
            mgr.insertInvoice(((Integer) invoiceNoSpinner.getValue()).intValue(),
                    invoiceSeriesField.getText(),
                    sdate, sdue,
                    customerNameField.getText(),
                    customerAddressField.getText(),
                    customerRegionField.getText(),
                    customerCountryField.getText(),
                    customerIdCodeField.getText(),
                    customerRegNoField.getText(),
                    customerBankAccountField.getText(),
                    customerBankField.getText());
            int lastInvoiceId = mgr.getLastInsertedId();
            DefaultTableModel model = (DefaultTableModel) detailsTable.getModel();
            int rowCount = model.getRowCount();
            for (int row = 0; row < rowCount; row++) {
                mgr.insertInvoiceDetail(
                        lastInvoiceId,
                        ((Integer) model.getValueAt(row, 0)).intValue(),
                        (String) model.getValueAt(row, 1),
                        (String) model.getValueAt(row, 2),
                        ((Integer) model.getValueAt(row, 3)).intValue(),
                        ((Double) model.getValueAt(row, 4)).doubleValue());
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_onSaveInvoiceRequested

    private void onAddInvoiceDetailRequested(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAddInvoiceDetailRequested
        DefaultTableModel model = ((DefaultTableModel) detailsTable.getModel());
        model.addRow(new Object[]{model.getRowCount() + 1, "", "buc", 1, null});
    }//GEN-LAST:event_onAddInvoiceDetailRequested

    private void onDeleteInvoiceDetailRequested(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onDeleteInvoiceDetailRequested
        if (detailsTable.getSelectedRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "Please select an invoice detail",
                    "Select data", JOptionPane.INFORMATION_MESSAGE);
        }
        DefaultTableModel model = ((DefaultTableModel) detailsTable.getModel());
        model.removeRow(detailsTable.getSelectedRow());
    }//GEN-LAST:event_onDeleteInvoiceDetailRequested
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDetailButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel commandPanel;
    private javax.swing.JTextField customerAddressField;
    private javax.swing.JLabel customerAddressLabel;
    private javax.swing.JTextField customerBankAccountField;
    private javax.swing.JLabel customerBankAccountLabel;
    private javax.swing.JTextField customerBankField;
    private javax.swing.JLabel customerBankLabel;
    private javax.swing.JTextField customerCountryField;
    private javax.swing.JLabel customerCountryLabel;
    private javax.swing.JTextField customerIdCodeField;
    private javax.swing.JLabel customerIdCodeLabel;
    private javax.swing.JTextField customerNameField;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JTextField customerRegNoField;
    private javax.swing.JLabel customerRegNoLabel;
    private javax.swing.JTextField customerRegionField;
    private javax.swing.JLabel customerRegionLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JSpinner dateSpinner;
    private javax.swing.JButton deleteDetailButton;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JTable detailsTable;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JSpinner dueDateSpinner;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel invoiceNoLabel;
    private javax.swing.JSpinner invoiceNoSpinner;
    private javax.swing.JTextField invoiceSeriesField;
    private javax.swing.JLabel invoiceSeriesLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables
}
