/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Jan 15, 2010, 4:40:05 PM
 */
package com.google.code.reelcash;

import com.google.code.reelcash.actions.ExitAction;
import com.google.code.reelcash.actions.ShowModalDialogAction;
import com.google.code.reelcash.dialogs.UserSettingsJDialog;
import java.awt.Dimension;
import java.awt.Point;
import java.net.URL;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;

/**
 *
 * @author andrei.olar
 */
public class MainFrame extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;

	/** Creates new form MainFrame */
	public MainFrame() {
		initComponents();
		initToolBar();
		postInitComponents();
	}

	private void addToolBarButton(String imageKey, String text, char mnemonic, Action performAction) {
		JButton button = toolBar.add(performAction);

		if (null == imageKey || 1 > imageKey.length())
			button.setText(text);
		else {
			URL rasa = getClass().getResource(imageKey);
			button.setIcon(new ImageIcon(rasa));
		}
		button.setMnemonic(mnemonic);
		button.setMinimumSize(new Dimension(32, 32));
		button.setMaximumSize(new Dimension(48, 48));
		button.setPreferredSize(button.getMaximumSize());
	}

	private void initToolBar() {
		addToolBarButton("images/toolbar/exit.png", "Exit", 'x', new ExitAction(0));
		toolBar.addSeparator();
		addToolBarButton("images/toolbar/settings.png", "User settings", 'u', new ShowModalDialogAction(new UserSettingsJDialog(this, true)));
	}

	private void postInitComponents() {
		setMinimumSize(new Dimension(400, 300));
		setMaximumSize(getToolkit().getScreenSize());
		setPreferredSize(new Dimension((int) (getMaximumSize().getWidth() + getMinimumSize().getWidth()) / 2,
				(int) (getMaximumSize().getHeight() + getMinimumSize().getHeight()) / 2));
		setLocation(new Point((int) (getMaximumSize().getWidth() - getPreferredSize().getWidth()) / 2,
				(int) (getMaximumSize().getHeight() - getPreferredSize().getHeight()) / 2));
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    toolBar = new javax.swing.JToolBar();
    invoicesPanel = new javax.swing.JPanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    toolBar.setRollover(true);
    getContentPane().add(toolBar, java.awt.BorderLayout.NORTH);

    javax.swing.GroupLayout invoicesPanelLayout = new javax.swing.GroupLayout(invoicesPanel);
    invoicesPanel.setLayout(invoicesPanelLayout);
    invoicesPanelLayout.setHorizontalGroup(
      invoicesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 400, Short.MAX_VALUE)
    );
    invoicesPanelLayout.setVerticalGroup(
      invoicesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 298, Short.MAX_VALUE)
    );

    getContentPane().add(invoicesPanel, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new MainFrame().setVisible(true);
			}
		});
	}
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel invoicesPanel;
  private javax.swing.JToolBar toolBar;
  // End of variables declaration//GEN-END:variables
}
